File Opened Done ...
File :  #version 330 core
in vec3 in_position;
in vec3 in_normal;
in vec2 in_texcoord;

varying vec3 N;

varying vec4 V; 

//out vec2 UV;
//inout vec4 C;

uniform mat4 MV;
uniform mat4 P;

uniform uint lights_count;

uniform float t;

void main(void)
{
	vec4 position = vec4(in_position.x  ,in_position.y,in_position.z,1.0);
	mat3 NM = mat3(transpose(inverse(MV)));
	V = MV * position ;
	uint i;

	N = normalize(NM * in_normal);
	gl_Position =  P * MV *  position;
}



File Opened Done ...
File :  #version 330 core
const uint MAX_LIGHT_COUNT = 100u;

varying vec3 N;
varying vec4 V; 
varying vec3 L[MAX_LIGHT_COUNT];
//in vec2 UV;


uniform vec4 lights_ambient[MAX_LIGHT_COUNT];
uniform vec4 lights_diffuse[MAX_LIGHT_COUNT];
uniform vec4 lights_specular[MAX_LIGHT_COUNT];
uniform vec4 lights_position[MAX_LIGHT_COUNT];
uniform vec4 lights_misc[MAX_LIGHT_COUNT];

uniform uint lights_count;

uniform vec4 material_ambient;
uniform vec4 material_diffuse;
uniform vec4 material_specular;
uniform float material_shininess;

layout(location = 0) out vec4 color;

void main(void)
{
	vec3 E = normalize(-V).xyz;
	vec3 R;
	vec3 L;
	vec3 vTol;
	float vtollength;
	float range;
	float attenuation;
	float attenuationFactor;
	color = vec4(0.,0.,0.,0.);
	vec4 ambient = vec4(0.,0.,0.,0.);
	vec4 diffuse = vec4(0.,0.,0.,0.);
	vec4 specular = vec4(0.,0.,0.,0.);
	 
	for(uint i = 0u; i < lights_count;i++)
	{
		vTol = (lights_position[i] - V).xyz;
		vtollength = length(vTol);
		range = lights_misc[i].x;
		if(range == 0. || vtollength < range)
		{
			attenuation = lights_misc[i].y;
			attenuationFactor = 1.;
			if(attenuation < 1. && range != 0.)
			{
				attenuationFactor = ((range - vtollength) / ((1-attenuation) * range));
			}
			clamp(attenuationFactor,0.0,1.0);
			L = normalize(vTol).xyz;
			R = normalize(-reflect(L.xyz,N));
			ambient += material_ambient * lights_ambient[i] * attenuationFactor;
			diffuse += dot(L,N) * material_diffuse * lights_diffuse[i] * attenuationFactor;
			diffuse = clamp(diffuse,0.0,1.0);
			specular += pow(max(0.0,dot(R,E)),0.3*material_shininess) * material_specular*lights_specular[i]*attenuationFactor;
			specular += clamp(specular,0.0,1.0);
		}
	}

	color = vec4((diffuse + ambient + specular).xyz,material_diffuse.a);
}


File Opened Done ...
File :  #version 330 core
const uint MAX_LIGHT_COUNT = 100u;

varying vec4 V; 
varying vec3 N;

//in vec2 UV;
//uniform sampler2D envmap;

uniform vec4 lights_ambient[MAX_LIGHT_COUNT];
uniform vec4 lights_diffuse[MAX_LIGHT_COUNT];
uniform vec4 lights_specular[MAX_LIGHT_COUNT];
uniform vec4 lights_position[MAX_LIGHT_COUNT];
uniform vec4 lights_misc[MAX_LIGHT_COUNT];
uniform uint lights_count;

uniform vec4 material_ambient;
uniform vec4 material_diffuse;
uniform vec4 material_specular;
uniform float material_shininess;

uniform float width;
uniform float height;

out vec4 color;
uniform sampler2D depthTex;

void main(){
	vec3 E = normalize(-V).xyz;
	vec3 R;
	vec3 L;
	vec3 vTol;
	float vtollength;
	float range;
	float attenuation;
	float attenuationFactor;
	color = vec4(0.,0.,0.,0.);
	vec4 ambient = vec4(0.,0.,0.,0.);
	vec4 diffuse = vec4(0.,0.,0.,0.);
	vec4 specular = vec4(0.,0.,0.,0.);
	 
	for(uint i = 0u; i < lights_count;i++)
	{
		vTol = (lights_position[i] - V).xyz;
		vtollength = length(vTol);
		range = lights_misc[i].x;
		if(range == 0. || vtollength < range)
		{
			attenuation = lights_misc[i].y;
			attenuationFactor = 1.;
			if(attenuation < 1. && range != 0.)
			{
				attenuationFactor = ((range - vtollength) / ((1-attenuation) * range));
			}
			clamp(attenuationFactor,0.0,1.0);
			L = normalize(vTol).xyz;
			R = normalize(-reflect(L.xyz,N));
			ambient += material_ambient * lights_ambient[i] * attenuationFactor;
			diffuse += dot(L,N) * material_diffuse * lights_diffuse[i] * attenuationFactor;
			diffuse = clamp(diffuse,0.0,1.0);
			specular += pow(max(0.0,dot(R,E)),0.3*material_shininess) * material_specular*lights_specular[i]*attenuationFactor;
			specular += clamp(specular,0.0,1.0);
		}
	}


	float textureZ = texture(depthTex,vec2(clamp(gl_FragCoord.x / width,0.0,1.0),clamp(gl_FragCoord.y / height,0.0,1.0))).x;
	
	if(textureZ < gl_FragCoord.z) 
	{
		color = vec4((diffuse + ambient + specular).xyz,material_diffuse.a);
	}else
	{
		discard;
	}
}
	

***********************************************************************************************************************************
20
19
18
17
16
15
14
13
12
11
10
9
8
7
6
5
4
3
2
1
0
21
20
19
18
17
16
15
14
13
12
11
10
9
8
7
6
5
4
3
25
24
23
22
21
20
19
2
1
28
27
26
18
17
25
24
0
16
23
15
14
22
13
12
11
10
21
20
19
9
8
7
18
6
5
4
17
16
15
3
14
13
12
2
1
0
11
10
9
8
7
6
5
4
3
2
1
0
26
25
24
23
22
21
20
19
18
17
16
15
14
13
12
11
10
9
8
7
6
5
4
3
27
26
25
2
1
24
23
22
21
20
0
19
18
17
16
15
14
19
18
13
12
11
10
17
9
16
8
7
6
15
14
5
13
12
11
4
3
10
21
2
1
20
19
0
9
8
7
18
6
17
5
4
16
15
14
3
2
1
0
13
12
11
10
9
8
7
6
5
4
3
2
1
0
19
18
17
16
15
14
13
12
11
10
9
8
7
6
5
4
3
2
1
0
19
18
17
16
15
14
13
12
11
10
9
8
7
6
5
4
3
2
1
0
21
20
19
18
17
16
15
14
13
12
11
10
9
8
7
6
5
4
3
2
1
0
20
19
18
17
16
15
14
13
12
11
10
9
8
7
6
5
28
4
27
26
25
24
23
3
22
2
1
21
0
20
19
18
17
16
15
14
13
12
11
10
9
8
7
6
5
4
3
2
1
0
21
20
19
18
17
16
15
14
13
12
11
10
9
8
7
6
5
4
3
2
1
0
19
18
17
16
15
14
13
12
11
10
9
8
7
6
5
4
3
2
1
0
21
20
19
18
17
16
15
14
13
12
11
10
9
8
7
6
5
4
3
2
1
0
19
18
17
16
15
14
13
12
11
10
9
28
27
26
8
25
7
6
19
5
24
18
4
17
16
23
15
14
13
22
21
20
12
3
19
18
17
16
11
10
15
2
14
13
25
24
9
1
0
12
11
8
10
24
9
23
22
8
21
7
7
20
23
6
6
22
21
19
18
17
22
5
21
20
20
5
4
3
19
18
19
16
4
3
2
17
2
15
16
18
14
13
17
1
0
15
16
12
15
11
10
14
13
12
1
0
9
14
8
11
13
7
6
12
10
9
8
11
10
9
7
8
5
7
6
4
5
6
26
4
5
3
2
3
1
2
0
1
0
4
25
3
2
1
24
23
22
21
20
0
19
28
27
26
25
24
18
17
23
22
16
21
15
20
14
19
13
18
12
11
10
17
16
15
14
13
9
8
7
21
21
12
6
5
4
20
20
3
19
11
10
2
1
18
9
19
8
0
7
6
18
5
17
17
16
15
16
15
14
4
13
12
3
14
13
12
11
11
2
1
10
10
0
9
9
8
7
8
22
6
7
21
20
5
6
19
4
5
4
3
2
1
18
17
3
16
2
1
0
0
15
24
23
14
22
21
20
19
18
13
12
11
10
17
9
8
7
16
6
5
15
14
13
12
24
4
21
23
26
3
11
20
19
18
22
2
25
10
24
1
9
8
21
0
7
20
6
17
16
19
23
18
22
17
16
15
5
4
3
15
21
20
19
18
14
17
2
14
16
13
12
13
12
11
15
14
13
12
11
1
0
10
10
11
9
26
8
9
7
25
6
8
10
9
8
24
7
6
5
4
23
5
22
21
20
7
3
19
6
5
4
27
3
4
2
2
1
3
26
2
1
0
25
18
17
24
23
1
0
0
16
15
22
21
20
19
25
18
14
17
13
24
23
16
12
15
14
22
20
13
11
12
19
10
21
20
11
19
18
9
8
18
10
9
17
17
7
16
6
15
5
14
13
4
8
16
12
15
21
11
14
3
2
10
1
25
7
9
13
12
24
11
0
8
20
19
7
10
6
23
22
9
5
4
21
3
20
19
18
17
2
6
18
5
16
1
17
0
8
16
4
3
7
6
15
2
14
13
15
14
5
12
4
13
11
3
2
12
10
9
11
1
0
8
7
1
6
10
9
0
8
5
7
4
6
5
3
4
2
3
2
1
0
24
1
23
22
21
0
20
19
18
17
16
15
14
13
12
11
10
9
8
7
6
5
4
22
21
3
20
19
20
19
2
1
0
18
17
16
15
14
13
18
17
16
15
12
11
10
9
14
25
13
24
23
8
7
22
21
20
12
19
11
6
18
5
17
16
4
3
15
14
2
1
13
12
10
0
9
8
7
6
11
5
10
26
4
3
2
25
24
23
9
22
21
8
1
7
20
0
6
19
5
4
18
3
17
16
15
14
13
2
1
0
12
11
10
9
8
7
6
5
4
22
21
3
20
19
2
1
18
17
0
16
15
14
13
25
24
23
22
12
21
11
10
26
26
20
9
19
25
24
23
22
25
24
18
17
23
16
15
14
21
8
20
7
22
21
13
6
19
18
20
12
5
17
11
4
19
18
3
2
1
16
15
10
17
14
0
13
12
11
10
16
15
9
14
9
8
8
7
6
7
13
12
11
5
6
10
9
8
4
5
3
2
1
0
7
4
3
2
6
1
5
4
3
2
0
1
0
26
26
25
25
24
24
26
25
23
24
23
19
22
21
18
17
22
23
26
16
21
20
21
15
19
18
20
19
20
25
17
18
16
17
22
19
24
15
21
23
14
13
20
18
16
15
19
18
14
17
14
22
12
11
10
13
9
16
8
15
12
13
7
12
25
24
17
21
11
6
11
10
16
15
10
5
9
20
19
14
14
18
9
4
23
13
3
8
13
8
7
6
12
22
5
11
17
16
15
2
4
10
12
11
7
1
10
3
21
14
0
9
20
13
9
8
7
12
6
2
11
8
7
6
10
19
5
1
18
4
5
9
0
6
3
17
16
4
5
27
4
26
3
25
3
15
14
2
8
13
24
23
2
7
1
22
6
0
21
2
1
5
0
20
1
0
12
4
11
10
3
19
2
9
19
18
1
8
0
7
17
6
18
5
16
15
14
4
17
3
16
2
13
1
27
12
15
14
0
13
12
11
10
9
8
7
26
25
11
6
24
23
22
5
10
21
9
4
20
3
27
19
26
25
8
24
7
2
23
22
6
5
1
18
17
0
21
4
16
20
19
3
15
2
14
13
1
12
18
11
0
10
17
16
9
15
14
13
12
8
7
19
6
5
11
18
4
10
3
2
1
9
8
17
16
0
7
6
5
4
3
15
2
14
13
12
1
0
11
26
25
10
24
23
9
22
27
26
21
20
25
19
18
17
8
16
15
7
6
24
5
23
4
14
13
12
3
11
2
1
10
9
8
22
21
0
20
19
18
7
6
5
17
16
15
14
13
4
12
11
10
9
8
7
6
5
4
3
2
1
3
0
2
1
0
25
24
23
22
21
20
19
18
17
16
15
14
13
12
11
10
9
8
7
6
5
4
3
2
1
0
60.5171
