File Opened Done ...
File :  #version 330 core
in vec3 in_position;
in vec3 in_normal;
in vec2 in_texcoord;

varying vec3 N;

varying vec4 V; 

//out vec2 UV;
//inout vec4 C;

uniform mat4 MV;
uniform mat4 P;

uniform uint lights_count;

uniform float t;

void main(void)
{
	vec4 position = vec4(in_position.x  ,in_position.y,in_position.z,1.0);
	mat3 NM = mat3(transpose(inverse(MV)));
	V = MV * position ;
	uint i;

	N = normalize(NM * in_normal);
	gl_Position =  P * MV *  position;
}



File Opened Done ...
File :  #version 330 core
const uint MAX_LIGHT_COUNT = 100u;

varying vec3 N;
varying vec4 V; 
varying vec3 L[MAX_LIGHT_COUNT];
//in vec2 UV;


uniform vec4 lights_ambient[MAX_LIGHT_COUNT];
uniform vec4 lights_diffuse[MAX_LIGHT_COUNT];
uniform vec4 lights_specular[MAX_LIGHT_COUNT];
uniform vec4 lights_position[MAX_LIGHT_COUNT];
uniform vec4 lights_misc[MAX_LIGHT_COUNT];

uniform uint lights_count;

uniform vec4 material_ambient;
uniform vec4 material_diffuse;
uniform vec4 material_specular;
uniform float material_shininess;

layout(location = 0) out vec4 color;

void main(void)
{
	vec3 E = normalize(-V).xyz;
	vec3 R;
	vec3 L;
	vec3 vTol;
	float vtollength;
	float range;
	float attenuation;
	float attenuationFactor;
	color = vec4(0.,0.,0.,0.);
	vec4 ambient = vec4(0.,0.,0.,0.);
	vec4 diffuse = vec4(0.,0.,0.,0.);
	vec4 specular = vec4(0.,0.,0.,0.);
	 
	for(uint i = 0u; i < lights_count;i++)
	{
		vTol = (lights_position[i] - V).xyz;
		vtollength = length(vTol);
		range = lights_misc[i].x;
		if(range == 0. || vtollength < range)
		{
			attenuation = lights_misc[i].y;
			attenuationFactor = 1.;
			if(attenuation < 1. && range != 0.)
			{
				attenuationFactor = ((range - vtollength) / ((1-attenuation) * range));
			}
			clamp(attenuationFactor,0.0,1.0);
			L = normalize(vTol).xyz;
			R = normalize(-reflect(L.xyz,N));
			ambient += material_ambient * lights_ambient[i] * attenuationFactor;
			diffuse += dot(L,N) * material_diffuse * lights_diffuse[i] * attenuationFactor;
			diffuse = clamp(diffuse,0.0,1.0);
			specular += pow(max(0.0,dot(R,E)),0.3*material_shininess) * material_specular*lights_specular[i]*attenuationFactor;
			specular += clamp(specular,0.0,1.0);
		}
	}

	color = vec4((diffuse + ambient + specular).xyz,material_diffuse.a);
}


File Opened Done ...
File :  #version 330 core
const uint MAX_LIGHT_COUNT = 100u;

varying vec4 V; 
varying vec3 N;

//in vec2 UV;
//uniform sampler2D envmap;

uniform vec4 lights_ambient[MAX_LIGHT_COUNT];
uniform vec4 lights_diffuse[MAX_LIGHT_COUNT];
uniform vec4 lights_specular[MAX_LIGHT_COUNT];
uniform vec4 lights_position[MAX_LIGHT_COUNT];
uniform vec4 lights_misc[MAX_LIGHT_COUNT];
uniform uint lights_count;

uniform vec4 material_ambient;
uniform vec4 material_diffuse;
uniform vec4 material_specular;
uniform float material_shininess;

uniform float width;
uniform float height;

out vec4 color;
uniform sampler2D depthTex;

void main(){
	vec3 E = normalize(-V).xyz;
	vec3 R;
	vec3 L;
	vec3 vTol;
	float vtollength;
	float range;
	float attenuation;
	float attenuationFactor;
	color = vec4(0.,0.,0.,0.);
	vec4 ambient = vec4(0.,0.,0.,0.);
	vec4 diffuse = vec4(0.,0.,0.,0.);
	vec4 specular = vec4(0.,0.,0.,0.);
	 
	for(uint i = 0u; i < lights_count;i++)
	{
		vTol = (lights_position[i] - V).xyz;
		vtollength = length(vTol);
		range = lights_misc[i].x;
		if(range == 0. || vtollength < range)
		{
			attenuation = lights_misc[i].y;
			attenuationFactor = 1.;
			if(attenuation < 1. && range != 0.)
			{
				attenuationFactor = ((range - vtollength) / ((1-attenuation) * range));
			}
			clamp(attenuationFactor,0.0,1.0);
			L = normalize(vTol).xyz;
			R = normalize(-reflect(L.xyz,N));
			ambient += material_ambient * lights_ambient[i] * attenuationFactor;
			diffuse += dot(L,N) * material_diffuse * lights_diffuse[i] * attenuationFactor;
			diffuse = clamp(diffuse,0.0,1.0);
			specular += pow(max(0.0,dot(R,E)),0.3*material_shininess) * material_specular*lights_specular[i]*attenuationFactor;
			specular += clamp(specular,0.0,1.0);
		}
	}


	float textureZ = texture(depthTex,vec2(clamp(gl_FragCoord.x / width,0.0,1.0),clamp(gl_FragCoord.y / height,0.0,1.0))).x;
	
	if(textureZ < gl_FragCoord.z) 
	{
		color = vec4((diffuse + ambient + specular).xyz,material_diffuse.a);
	}else
	{
		discard;
	}
}
	

***********************************************************************************************************************************
26
25
24
23
22
21
20
19
20
19
18
18
17
17
16
16
15
14
15
14
13
13
12
12
11
11
10
10
9
9
8
8
7
6
7
5
4
6
5
3
2
1
0
4
3
2
1
0
28
27
26
25
24
23
22
21
20
19
18
17
16
15
14
13
12
11
10
9
8
7
6
5
4
3
2
1
0
19
25
24
19
20
19
18
17
16
15
23
22
18
14
21
17
20
16
15
14
13
19
18
17
13
12
11
18
16
17
16
15
10
14
15
12
13
12
14
13
11
12
11
11
10
10
9
10
9
9
9
8
8
7
8
7
7
6
8
6
5
6
5
4
4
3
2
5
7
6
5
3
4
3
4
3
2
1
2
1
0
2
0
1
1
0
0
27
26
20
25
19
24
18
17
23
16
22
21
20
15
14
13
19
18
17
12
16
11
15
10
14
13
9
12
8
11
10
7
6
9
5
8
4
7
6
3
5
4
2
3
2
1
1
0
0
27
26
19
18
17
25
16
15
24
23
22
21
20
14
13
12
19
18
17
16
15
14
13
12
11
11
10
9
10
8
7
6
5
9
8
7
6
5
4
4
3
3
2
2
1
1
0
0
21
20
19
18
17
16
15
14
13
12
11
10
9
8
7
6
23
22
28
21
20
5
27
26
4
19
25
18
3
17
27
2
24
23
16
15
26
14
25
24
26
22
23
25
24
21
20
13
22
19
1
26
21
0
25
24
23
18
20
19
18
23
17
22
21
20
25
19
12
22
18
17
16
24
16
17
11
16
21
15
10
20
15
15
9
14
23
13
19
14
13
8
12
14
22
13
21
18
7
17
16
12
11
10
12
6
20
11
10
19
9
11
18
8
9
8
15
14
7
7
17
6
6
10
13
5
5
9
16
12
4
4
11
15
14
10
9
8
7
8
3
6
5
3
2
13
12
2
4
5
1
1
11
7
4
0
0
10
9
6
5
3
3
4
8
7
2
21
1
20
6
5
2
0
19
4
1
0
18
3
3
20
2
17
2
1
16
19
1
0
18
15
0
14
17
13
16
15
12
11
14
13
10
26
12
9
11
10
8
9
7
6
25
24
23
8
5
22
21
20
7
23
19
22
6
5
4
18
4
3
3
2
1
17
2
16
15
21
0
20
19
14
1
0
18
17
13
16
12
15
11
14
10
9
13
12
11
8
10
9
7
8
7
6
5
4
6
5
3
2
1
0
4
3
2
1
0
19
28
27
22
26
18
25
24
17
21
23
16
22
15
14
13
21
20
20
19
12
11
10
19
18
17
9
18
8
17
16
16
15
15
14
14
7
13
13
12
11
6
5
10
9
12
4
11
10
3
8
9
7
8
7
2
6
5
4
3
1
6
0
5
2
1
4
3
2
1
0
0
23
22
27
26
21
25
25
21
24
23
20
20
22
24
19
21
18
20
23
17
22
21
20
16
15
19
18
19
18
17
17
16
19
14
15
18
13
24
17
16
16
15
15
23
14
13
22
14
13
12
11
10
12
14
21
12
20
11
11
26
13
19
18
12
17
25
21
10
16
10
9
9
11
20
8
9
24
15
23
7
10
8
7
6
5
8
6
22
9
8
7
7
21
19
6
5
6
4
5
20
4
18
3
14
13
3
5
4
4
19
3
17
16
2
3
12
11
18
2
2
15
2
17
1
14
10
16
15
0
14
13
12
11
1
0
1
9
8
7
1
10
13
0
6
12
9
0
5
8
4
7
26
3
2
25
24
23
23
11
10
22
1
9
21
20
22
21
0
8
6
19
5
18
17
16
20
7
6
5
15
19
18
4
4
21
3
20
2
3
17
14
13
1
2
12
16
0
1
0
19
11
10
18
15
14
13
12
17
16
15
11
14
10
9
8
7
9
13
12
6
5
4
8
11
7
6
3
20
5
4
3
2
1
2
1
19
27
26
25
10
0
0
18
17
16
9
8
24
7
15
23
23
22
6
21
20
14
5
4
19
18
17
22
3
13
16
2
21
12
15
14
13
1
12
11
20
19
18
0
25
10
9
11
10
8
7
6
28
27
26
9
5
17
25
24
4
16
8
7
6
3
15
24
23
14
13
22
23
22
21
5
12
11
20
4
3
21
19
2
10
9
20
18
8
7
17
6
1
19
16
2
5
4
18
15
3
14
13
1
2
17
16
0
1
0
15
14
13
12
0
12
11
10
9
26
8
25
7
20
11
10
6
24
19
9
18
23
5
4
22
3
8
21
7
6
20
17
16
2
15
1
19
18
14
5
17
4
3
0
2
1
16
13
0
15
14
12
13
11
12
11
10
9
10
9
8
7
8
6
7
6
5
4
3
5
4
2
3
2
1
1
0
0
24
25
24
23
23
22
22
21
21
20
19
20
19
18
17
18
17
16
15
14
13
16
15
14
12
11
13
12
11
10
10
9
9
8
8
7
7
6
5
4
6
5
4
3
3
2
1
2
1
0
0
22
21
19
20
18
17
19
16
15
14
13
12
18
17
11
16
15
14
13
10
12
9
11
8
10
9
7
8
6
5
4
7
6
5
4
3
2
3
1
2
1
0
0
23
21
20
22
19
21
20
18
19
18
17
16
15
14
13
12
17
16
15
14
13
11
10
9
8
12
7
11
10
6
5
9
8
7
4
6
5
4
3
2
3
2
1
1
0
0
20
19
19
18
18
17
16
17
15
14
13
12
16
15
11
10
9
8
14
7
6
13
12
11
10
9
8
7
6
5
4
5
3
4
3
2
1
2
1
0
0
20
21
19
26
25
24
25
24
18
23
23
20
19
22
18
17
16
17
21
15
14
16
20
15
22
13
21
19
18
20
19
17
16
18
17
14
15
12
16
15
13
11
14
13
14
13
12
11
12
10
12
10
9
9
11
8
11
7
8
6
10
9
7
8
6
7
5
6
10
9
8
4
5
5
3
4
3
2
4
2
3
1
7
6
5
1
0
0
2
4
1
3
0
2
1
0
25
24
23
22
22
21
20
21
20
19
18
17
16
19
18
15
17
14
16
15
14
13
12
13
12
11
11
10
10
9
9
8
7
8
6
5
7
6
5
4
4
3
3
2
2
1
1
0
0
27
26
26
28
27
27
25
26
25
25
26
24
24
24
25
24
23
22
21
23
22
23
22
20
23
21
22
19
18
17
21
20
16
20
21
20
19
18
19
17
15
16
18
17
14
13
12
11
19
15
16
18
14
10
17
13
15
12
16
9
15
14
11
14
13
13
12
10
12
9
11
8
8
10
7
11
6
5
10
9
4
9
8
8
7
6
7
3
7
6
6
5
5
4
5
3
4
3
2
2
4
3
2
1
1
1
2
0
0
0
1
0
57.7789
