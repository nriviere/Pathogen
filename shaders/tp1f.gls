#version 330 core

varying vec3 N;
varying vec4 V; 
varying vec3 L;
//in vec2 UV;

//uniform sampler2D envmap;

const unsigned int MAX_LIGHT_COUNT = 100u;

uniform vec4 lights_ambient[MAX_LIGHT_COUNT];
uniform vec4 lights_diffuse[MAX_LIGHT_COUNT];
uniform vec4 lights_specular[MAX_LIGHT_COUNT];

uniform vec4 material_ambient;
uniform vec4 material_diffuse;
uniform vec4 material_specular;
uniform float material_shininess;

layout(location = 0) out vec4 color;

void main(void)
{
	vec3 E = normalize(-V).xyz;
	vec3 R = normalize(-reflect(L.xyz,N));

	vec4 ambient = material_ambient * lights_ambient[0];
	vec4 diffuse = dot(L,N) * material_diffuse * lights_diffuse[0];
	diffuse = clamp(diffuse,0.0,1.0);
	vec4 specular = pow(max(0.0,dot(R,E)),0.3*material_shininess) * material_specular*lights_specular[0];
	specular = clamp(specular,0.0,1.0);
	//gl_FragColor = diffuse + ambient + specular;
	//gl_FragColor = vec4(1.,1.,1.,1.);
	color = vec4(diffuse + ambient + specular);
	//color = vec4(0.5,0.5,0.5,1.);
}

