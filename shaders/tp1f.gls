varying vec3 N;
varying vec4 V; 
varying vec3 L;
varying vec2 UV;

uniform sampler2D envmap;

const unsigned int MAX_LIGHT_COUNT = 100u;

uniform vec4 lights_ambient[MAX_LIGHT_COUNT];
uniform vec4 lights_diffuse[MAX_LIGHT_COUNT];
uniform vec4 lights_specular[MAX_LIGHT_COUNT];

void main(void)
{
	vec3 E = normalize(-V);
	vec3 R = normalize(-reflect(L.xyz,N));

	vec4 ambient = gl_FrontMaterial.ambient * lights_ambient[0];
	vec4 diffuse = dot(L,N) * gl_FrontMaterial.diffuse * lights_diffuse[0];
	diffuse = clamp(diffuse,0.0,1.0);
	vec4 specular = pow(max(0.0,dot(R,E)),0.3*gl_FrontMaterial.shininess) * gl_FrontMaterial.specular*lights_specular[0];
	specular = clamp(specular,0.0,1.0);
	gl_FragColor =  diffuse + ambient + specular ;
}

